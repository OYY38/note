import{_ as a,p as e,q as n,a1 as s}from"./framework-5866ffd3.js";const c={},i=s(`<h1 id="chrome" tabindex="-1"><a class="header-anchor" href="#chrome" aria-hidden="true">#</a> chrome</h1><h2 id="_1-一键重新发起请求" tabindex="-1"><a class="header-anchor" href="#_1-一键重新发起请求" aria-hidden="true">#</a> 1. 一键重新发起请求</h2><ul><li>选中 <code>Network</code></li><li>点击 <code>Fetch/XHR</code></li><li>选择要重新发送的请求</li><li>右键选择 <code>Replay XHR</code></li></ul><h2 id="_2-在控制台快速发起请求" tabindex="-1"><a class="header-anchor" href="#_2-在控制台快速发起请求" aria-hidden="true">#</a> 2. 在控制台快速发起请求</h2><ul><li>选中 <code>Network</code></li><li>点击 <code>Fetch/XHR</code></li><li>选择 <code>Copy as fetch</code></li><li>控制台粘贴代码</li><li>修改参数, 回车搞定</li></ul><h2 id="_3-复制javascript变量" tabindex="-1"><a class="header-anchor" href="#_3-复制javascript变量" aria-hidden="true">#</a> 3. 复制JavaScript变量</h2><ul><li>使用 <code>copy</code> 函数, 将 <code>对象</code> 作为入参执行即可, copy(obj)</li><li>ctrl + c</li></ul><h2 id="_4-控制台获取元素" tabindex="-1"><a class="header-anchor" href="#_4-控制台获取元素" aria-hidden="true">#</a> 4. 控制台获取元素</h2><ul><li>通过 <code>Elements</code> 选择要调试的元素</li><li>控制台直接用 <code>$0</code> 访问</li></ul><h2 id="_5-控制台引用上一次执行的结果" tabindex="-1"><a class="header-anchor" href="#_5-控制台引用上一次执行的结果" aria-hidden="true">#</a> 5. 控制台引用上一次执行的结果</h2><ul><li><p>使用<code>$_</code>引用上一次操作的结果, 不用每次都复制一遍</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&#39;123&#39;</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; [&#39;1&#39;,&#39;2&#39;,&#39;3&#39;]</span>
$_<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; [&#39;3&#39;,&#39;2&#39;,&#39;1&#39;]</span>
$_<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; &#39;321&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,11),t=[i];function o(l,d){return e(),n("div",null,t)}const p=a(c,[["render",o],["__file","chrome.html.vue"]]);export{p as default};
